<?xml version="1.0" encoding="utf-8"?>
<project name="JuniorMap" default="Build" xmlns="http://nant.sf.net/schemas/nant.xsd">
	<!-- NAnt -->
	<property name="nant.settings.currentframework" value="net-4.0"/>

	<!-- Paths -->
	<property name="TrunkDirectory" value="${path::get-directory-name(project::get-buildfile-path())}"/>
	<property name="BinariesDirectory" value="${TrunkDirectory}\Binaries"/>
	<property name="PackageDirectory" value="${TrunkDirectory}\Package"/>
	<property name="PackagesDirectory" value="${TrunkDirectory}\Packages"/>
	<property name="ResultsDirectory" value="${TrunkDirectory}\Results\${BuildConfiguration}"/>
	<property name="SourceDirectory" value="${TrunkDirectory}\Source"/>
	<property name="BuildOutputDirectory" value="${SourceDirectory}\BuildOutput\${BuildConfiguration}"/>
	<property name="SolutionPath" value="${SourceDirectory}\${project::get-name()}.sln"/>
	<property name="BinariesPackageName" value="${project::get-name()} Binaries - ${BuildConfiguration} - ${Platform}.zip"/>
	<property name="NUnitRunner" value="${BinariesDirectory}\NUnit\nunit-console.exe"/>
	<property name="ILMergePath" value="${TrunkDirectory}\Binaries\ILMerge\ILMerge.exe"/>
	<property name="DotNETFrameworkDirectory" value="${framework::get-assembly-directory('net-4.0')}"/>
	<if test="${directory::exists('C:\Program Files')}">
		<property name="DotNETFrameworkAssemblyDirectory" value="C:\Program Files\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0\Profile\Client"/>
	</if>
	<if test="${directory::exists('C:\Program Files (x86)')}">
		<property name="DotNETFrameworkAssemblyDirectory" value="C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0\Profile\Client"/>
	</if>

	<!-- Version information -->
	<property name="Version.Major" value="1"/>
	<property name="Version.Minor" value="1"/>
	<property name="Version.Build" value="0"/>
	<property name="Version.Revision" value="0"/>
	<property name="ProductVersion" value="${Version.Major}.${Version.Minor}.${Version.Build}.${Version.Revision}" dynamic="true"/>

	<!-- Build -->
	<target name="Build">
		<call target="DeleteBuildOutputs"/>
		<call target="CommonAssemblyInfo"/>
		<call target="Compile"/>
		<call target="CleanTestResults"/>
		<call target="RunUnitTests"/>
		<call target="ILMerge"/>
		<call target="PackageBinaries"/>
	</target>

	<!-- Compile -->
	<target name="DeleteBuildOutputs">
		<delete>
			<fileset basedir="${BuildOutputDirectory}">
				<include name="**"/>
			</fileset>
		</delete>
	</target>
	<target name="CommonAssemblyInfo">
		<asminfo output="${SourceDirectory}\CommonAssemblyInfo.cs" language="CSharp">
			<imports>
				<import namespace="System.Reflection"/>
				<import namespace="System.Runtime.InteropServices"/>
			</imports>
			<attributes>
				<attribute type="ComVisibleAttribute" value="false"/>
				<attribute type="AssemblyVersionAttribute" value="${ProductVersion}"/>
				<attribute type="AssemblyFileVersionAttribute" value="${ProductVersion}"/>
				<attribute type="AssemblyInformationalVersionAttribute" value="${ProductVersion}"/>
			</attributes>
			<references>
				<include name="System.dll"/>
			</references>
		</asminfo>
	</target>
	<target name="Compile">
		<exec
			program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe"
			workingdir="."
			verbose="true">
			<arg value="${SolutionPath}"/>
			<arg value="/t:Clean;Rebuild"/>
			<arg value="/p:Configuration=${BuildConfiguration};Platform=${Platform}"/>
			<arg value="/v:q"/>
		</exec>
	</target>

	<!-- Test -->
	<target name="CleanTestResults">
		<delete dir="${ResultsDirectory}" if="${directory::exists('${ResultsDirectory}')}"/>
		<mkdir dir="${ResultsDirectory}"/>
	</target>
	<target name="RunUnitTests">
		<property name="UnitTestAssemblyPath" value="${BuildOutputDirectory}\Junior.Map.UnitTests.dll"/>
		<call target="ExecuteNUnit"/>
	</target>
	<target name="ExecuteNUnit">
		<exec program="${NUnitRunner}" workingdir="${path::get-directory-name(UnitTestAssemblyPath)}" failonerror="true" verbose="true">
			<arg path="${UnitTestAssemblyPath}"/>
			<arg value="/xml:${ResultsDirectory}\${path::get-file-name-without-extension(UnitTestAssemblyPath)}.dll-results.xml"/>
			<arg value="/noshadow"/>
			<arg value="/nothread"/>
			<arg value="/domain=Multiple"/>
			<arg value="/process=Single"/>
			<arg value="/framework=${nant.settings.currentframework}"/>
		</exec>
	</target>

	<!-- Package -->
	<target name="ILMerge">
		<delete dir="${PackageDirectory}" includeemptydirs="true"/>
		<mkdir dir="${PackageDirectory}"/>
		<exec
			program="${ILMergePath}"
			failonerror="true"
			workingdir="."
			verbose="true">
			<arg value="/targetplatform:v4,&quot;${DotNETFrameworkAssemblyDirectory}&quot;"/>
			<arg value="/t:library"/>
			<arg value="/keyfile:${SourceDirectory}\JuniorMap.snk"/>
			<arg value="/internalize"/>
			<arg value="/out:${PackageDirectory}\Junior.Map.dll"/>
			<arg value="${BuildOutputDirectory}\Junior.Map.dll"/>
			<arg value="${BuildOutputDirectory}\Junior.Common.dll"/>
		</exec>
	</target>
	<target name="PackageBinaries">
		<delete file="${PackagesDirectory}\${BinariesPackageName}" failonerror="false"/>
		<zip zipfile="${PackagesDirectory}\${BinariesPackageName}">
			<fileset basedir="${PackageDirectory}">
				<include name="*.dll"/>
				<include name="*.pdb"/>
			</fileset>
			<fileset basedir="${PackageDirectory}">
				<include name="${BuildOutputDirectory}\Junior.Map.xml"/>
			</fileset>
		</zip>
	</target>
</project>